// SPDX-License-Identifier: MIT
pragma solidity 0.8.28;

import {DeployScript} from "../script/Deploy.s.sol";
import {HelperConfig} from "../script/HelperConfig.s.sol";
import {console} from "forge-std/console.sol";

import {CommonTest} from "./CommonTest.t.sol";

contract TestVerify is CommonTest {
    uint256 privateKey = 0x88207617fe9f424a00f59fc54147faa52090fd8734b16e528b93073b93558a3e;

    function setUp() public {
        DeployScript deployer = new DeployScript();
        (, bridgeValidator,,, helperConfig) = deployer.run();
        cfg = helperConfig.getConfig();
    }

    function test_verify() external {
        // (bool success, ) =
        // address(bridgeValidator).call(hex"012d5a84000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000027b2ae5c066d7a433e8795e17608146a91567851fceec1a387aca967621277d28d2e6933a671b19e6dacfb42f6edfcce318b488403842cd685fc0625d406c6b2d0000000000000000000000000000000000000000000000000000000000000041c8f3adeee5aa46fd4875353adbfd2ed2adf153550a7b51b233d9214c5adf3c9e3f3135f3cd3ed72805eaa575ee8fd89b68bff85d74fc9ffec10fdae51490e8980000000000000000000000000000000000000000000000000000000000000000");
        // // keychain
        // (bool success, ) =
        // address(bridgeValidator).call(hex"012d5a84000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000027b2ae5c066d7a433e8795e17608146a91567851fceec1a387aca967621277d28d2e6933a671b19e6dacfb42f6edfcce318b488403842cd685fc0625d406c6b2d000000000000000000000000000000000000000000000000000000000000004151b1e65783ce8a911b6d4558f612a3d8d0093d6d3468fde3100d363f47c47eb359b1d2bc0b5a07b41f94a6a09e34b27189483bdd78492ca50ca0ee8c91f32f100100000000000000000000000000000000000000000000000000000000000000");
        // // local
        (bool success,) = address(bridgeValidator).call(
            hex"012d5a84000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000027b2ae5c066d7a433e8795e17608146a91567851fceec1a387aca967621277d28d2e6933a671b19e6dacfb42f6edfcce318b488403842cd685fc0625d406c6b2d0000000000000000000000000000000000000000000000000000000000000041c8f3adeee5aa46fd4875353adbfd2ed2adf153550a7b51b233d9214c5adf3c9e3f3135f3cd3ed72805eaa575ee8fd89b68bff85d74fc9ffec10fdae51490e8981b00000000000000000000000000000000000000000000000000000000000000"
        ); // local
            // bytes32 msgHash = 0x7db5d7234108fe691bb83cc9384834be454683dfc446b200b39e3a36ae358a23;
            // console.logBytes(_createSignature(msgHash, privateKey));

        // console.logAddress(vm.addr(privateKey));
    }
}

// from oracle:
// 0x51b1e65783ce8a911b6d4558f612a3d8d0093d6d3468fde3100d363f47c47eb359b1d2bc0b5a07b41f94a6a09e34b27189483bdd78492ca50ca0ee8c91f32f1001
// from here:   0x51b1e65783ce8a911b6d4558f612a3d8d0093d6d3468fde3100d363f47c47eb359b1d2bc0b5a07b41f94a6a09e34b27189483bdd78492ca50ca0ee8c91f32f101c
