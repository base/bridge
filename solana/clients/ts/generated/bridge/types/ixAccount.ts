/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getPubkeyOrPdaDecoder,
  getPubkeyOrPdaEncoder,
  type PubkeyOrPda,
  type PubkeyOrPdaArgs,
} from '.';

/**
 * Account used in an instruction.
 * Similar to Solana's `AccountMeta`, but serializable with Anchor and supports PDAs via `PubkeyOrPda`.
 */

export type IxAccount = {
  /** Public key of the account. */
  pubkeyOrPda: PubkeyOrPda;
  /** Whether the account is writable. */
  isWritable: boolean;
  /** Whether the account is a signer. */
  isSigner: boolean;
};

export type IxAccountArgs = {
  /** Public key of the account. */
  pubkeyOrPda: PubkeyOrPdaArgs;
  /** Whether the account is writable. */
  isWritable: boolean;
  /** Whether the account is a signer. */
  isSigner: boolean;
};

export function getIxAccountEncoder(): Encoder<IxAccountArgs> {
  return getStructEncoder([
    ['pubkeyOrPda', getPubkeyOrPdaEncoder()],
    ['isWritable', getBooleanEncoder()],
    ['isSigner', getBooleanEncoder()],
  ]);
}

export function getIxAccountDecoder(): Decoder<IxAccount> {
  return getStructDecoder([
    ['pubkeyOrPda', getPubkeyOrPdaDecoder()],
    ['isWritable', getBooleanDecoder()],
    ['isSigner', getBooleanDecoder()],
  ]);
}

export function getIxAccountCodec(): Codec<IxAccountArgs, IxAccount> {
  return combineCodec(getIxAccountEncoder(), getIxAccountDecoder());
}
