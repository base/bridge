/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type BaseOracleConfig = {
  /** Number of required valid unique signatures */
  threshold: number;
  /** Number of signers in `signers` array */
  signerCount: number;
  /** Static list of authorized signer addresses */
  signers: Array<ReadonlyUint8Array>;
};

export type BaseOracleConfigArgs = BaseOracleConfig;

export function getBaseOracleConfigEncoder(): Encoder<BaseOracleConfigArgs> {
  return getStructEncoder([
    ['threshold', getU8Encoder()],
    ['signerCount', getU8Encoder()],
    [
      'signers',
      getArrayEncoder(fixEncoderSize(getBytesEncoder(), 20), { size: 16 }),
    ],
  ]);
}

export function getBaseOracleConfigDecoder(): Decoder<BaseOracleConfig> {
  return getStructDecoder([
    ['threshold', getU8Decoder()],
    ['signerCount', getU8Decoder()],
    [
      'signers',
      getArrayDecoder(fixDecoderSize(getBytesDecoder(), 20), { size: 16 }),
    ],
  ]);
}

export function getBaseOracleConfigCodec(): Codec<
  BaseOracleConfigArgs,
  BaseOracleConfig
> {
  return combineCodec(
    getBaseOracleConfigEncoder(),
    getBaseOracleConfigDecoder()
  );
}
