/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export type Eip1559Config = {
  /** Gas target per window (configurable) */
  target: bigint;
  /** Adjustment denominator (controls rate of change) (configurable) */
  denominator: bigint;
  /** Window duration in seconds (configurable) */
  windowDurationSeconds: bigint;
  /** Minimum base fee floor (configurable) */
  minimumBaseFee: bigint;
};

export type Eip1559ConfigArgs = {
  /** Gas target per window (configurable) */
  target: number | bigint;
  /** Adjustment denominator (controls rate of change) (configurable) */
  denominator: number | bigint;
  /** Window duration in seconds (configurable) */
  windowDurationSeconds: number | bigint;
  /** Minimum base fee floor (configurable) */
  minimumBaseFee: number | bigint;
};

export function getEip1559ConfigEncoder(): Encoder<Eip1559ConfigArgs> {
  return getStructEncoder([
    ['target', getU64Encoder()],
    ['denominator', getU64Encoder()],
    ['windowDurationSeconds', getU64Encoder()],
    ['minimumBaseFee', getU64Encoder()],
  ]);
}

export function getEip1559ConfigDecoder(): Decoder<Eip1559Config> {
  return getStructDecoder([
    ['target', getU64Decoder()],
    ['denominator', getU64Decoder()],
    ['windowDurationSeconds', getU64Decoder()],
    ['minimumBaseFee', getU64Decoder()],
  ]);
}

export function getEip1559ConfigCodec(): Codec<
  Eip1559ConfigArgs,
  Eip1559Config
> {
  return combineCodec(getEip1559ConfigEncoder(), getEip1559ConfigDecoder());
}
